{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.status = Game.STATUS.idle;\n        this.fieldSize = initialState.length;\n        this.initialState = initialState;\n        this.score = 0;\n        this.state = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"getColumns\",\n            value: function getColumns(state) {\n                return state[0].map(function(_, colIndex) {\n                    return state.map(function(row) {\n                        return row[colIndex];\n                    });\n                });\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.status !== Game.STATUS.playing) return;\n                var newRows = this.state.map(function(row) {\n                    var newRow = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n                        newRow[i] *= 2;\n                        newRow[i + 1] = 0;\n                        _this.score += newRow[i];\n                    }\n                    newRow = newRow.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(newRow).concat((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(Array(_this.fieldSize - newRow.length).fill(0)));\n                });\n                var hasChanged = !this.state.every(function(row, rowIndex) {\n                    return row.every(function(cell, cellIndex) {\n                        return cell === newRows[rowIndex][cellIndex];\n                    });\n                });\n                if (hasChanged) {\n                    this.state = newRows;\n                    this.addNewCell();\n                    this.setField();\n                    this.getStatus();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.status !== Game.STATUS.playing) return;\n                var newRows = this.state.map(function(row) {\n                    var newRow = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = newRow.length - 1; i > 0; i--)if (newRow[i] === newRow[i - 1]) {\n                        newRow[i] *= 2;\n                        newRow[i - 1] = 0;\n                        _this.score += newRow[i];\n                    }\n                    newRow = newRow.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(Array(_this.fieldSize - newRow.length).fill(0)).concat((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(newRow));\n                });\n                var hasChanged = !this.state.every(function(row, rowIndex) {\n                    return row.every(function(cell, cellIndex) {\n                        return cell === newRows[rowIndex][cellIndex];\n                    });\n                });\n                if (hasChanged) {\n                    this.state = newRows;\n                    this.addNewCell();\n                    this.setField();\n                    this.getStatus();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                if (this.status !== Game.STATUS.playing) return;\n                var columns = this.getColumns(this.state);\n                var newColumns = columns.map(function(column) {\n                    var newColumn = column.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = 0; i < newColumn.length - 1; i++)if (newColumn[i] === newColumn[i + 1]) {\n                        newColumn[i] *= 2;\n                        newColumn[i + 1] = 0;\n                        _this.score += newColumn[i];\n                    }\n                    newColumn = newColumn.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(newColumn).concat((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(Array(_this.fieldSize - newColumn.length).fill(0)));\n                });\n                var newState = newColumns[0].map(function(_, colIndex) {\n                    return newColumns.map(function(column) {\n                        return column[colIndex];\n                    });\n                });\n                var hasChanged = !this.state.every(function(row, rowIndex) {\n                    return row.every(function(cell, cellIndex) {\n                        return cell === newState[rowIndex][cellIndex];\n                    });\n                });\n                if (hasChanged) {\n                    this.state = newState;\n                    this.addNewCell();\n                    this.setField();\n                    this.getStatus();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                if (this.status !== Game.STATUS.playing) return;\n                var columns = this.getColumns(this.state);\n                var newColumns = columns.map(function(column) {\n                    var newColumn = column.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = newColumn.length - 1; i > 0; i--)if (newColumn[i] === newColumn[i - 1]) {\n                        newColumn[i] *= 2;\n                        newColumn[i - 1] = 0;\n                        _this.score += newColumn[i];\n                    }\n                    newColumn = newColumn.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(Array(_this.fieldSize - newColumn.length).fill(0)).concat((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(newColumn));\n                });\n                var newState = newColumns[0].map(function(_, colIndex) {\n                    return newColumns.map(function(column) {\n                        return column[colIndex];\n                    });\n                });\n                var hasChanged = !this.state.every(function(row, rowIndex) {\n                    return row.every(function(cell, cellIndex) {\n                        return cell === newState[rowIndex][cellIndex];\n                    });\n                });\n                if (hasChanged) {\n                    this.state = newState;\n                    this.addNewCell();\n                    this.setField();\n                    this.getStatus();\n                }\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.STATUS.playing;\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                this.addNewCell();\n                this.addNewCell();\n                this.setField();\n                this.score = 0;\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.status = Game.STATUS.idle;\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                this.setField();\n                this.score = 0;\n            }\n        },\n        {\n            key: \"setField\",\n            value: function setField() {\n                var cells = document.querySelectorAll(\".field-cell\");\n                var flatedState = this.state.flat();\n                for(var i = 0; i < cells.length; i++){\n                    cells[i].className = \"field-cell\";\n                    if (flatedState[i]) {\n                        cells[i].textContent = flatedState[i];\n                        cells[i].classList.add(\"field-cell--\".concat(flatedState[i]));\n                    } else cells[i].textContent = \"\";\n                }\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = flatedState[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var cell = _step.value;\n                        if (cell === 2048) this.status = Game.STATUS.win;\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                var hasMove = this.checkMovesAvailable();\n                if (!hasMove) this.status = Game.STATUS.lose;\n            }\n        },\n        {\n            key: \"checkMovesAvailable\",\n            value: function checkMovesAvailable() {\n                var flatedState = this.state.flat();\n                var hasEmptyCells = !flatedState.every(function(cell) {\n                    return cell !== 0;\n                });\n                var canStack;\n                for(var row = 0; row < this.fieldSize; row++){\n                    for(var col = 0; col < this.fieldSize; col++)if (col < this.fieldSize - 1 && this.state[row][col] === this.state[row][col + 1] || row < this.fieldSize - 1 && this.state[row][col] === this.state[row + 1][col]) canStack = true;\n                }\n                if (hasEmptyCells || canStack) return true;\n                return false;\n            }\n        },\n        {\n            key: \"addNewCell\",\n            value: function addNewCell() {\n                var emptyCells = [];\n                for(var i = 0; i < this.fieldSize; i++){\n                    for(var j = 0; j < this.fieldSize; j++)if (this.state[i][j] === 0) emptyCells.push({\n                        row: i,\n                        col: j\n                    });\n                }\n                if (emptyCells.length === 0) return;\n                var cellIndex = Math.floor(Math.random() * emptyCells.length);\n                var _emptyCells_cellIndex = emptyCells[cellIndex], row = _emptyCells_cellIndex.row, col = _emptyCells_cellIndex.col;\n                var newState = this.state.map(function(r) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(r);\n                });\n                newState[row][col] = Math.random() > 0.4 ? 2 : 4;\n                this.state = newState;\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"STATUS\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$loseMessage = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$winMessage = document.querySelector(\".message-win\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", $197cd56b15c33885$var$startGame);\nfunction $197cd56b15c33885$var$startGame() {\n    if ($197cd56b15c33885$var$game.status === $3d28d7f1aac198f5$exports.STATUS.idle) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n        $197cd56b15c33885$var$button.classList.remove(\"restart\");\n        $197cd56b15c33885$var$button.classList.add(\"start\");\n        $197cd56b15c33885$var$button.textContent = \"Start\";\n        $197cd56b15c33885$var$startMessage.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n    }\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKey);\n    if ($197cd56b15c33885$var$game.status !== $3d28d7f1aac198f5$exports.STATUS.playing) document.removeEventListener(\"keydown\", $197cd56b15c33885$var$handleKey);\n}\nfunction $197cd56b15c33885$var$handleKey(e) {\n    e.preventDefault();\n    switch(e.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        default:\n            break;\n    }\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.STATUS.lose) $197cd56b15c33885$var$loseMessage.classList.remove(\"hidden\");\n    else if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.STATUS.win) $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$game.checkMovesAvailable();\n}\n\n})();\n//# sourceMappingURL=index.46cd3d9e.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst button = document.querySelector('.button');\nconst score = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\n\nbutton.addEventListener('click', startGame);\n\nfunction startGame() {\n  if (game.status === Game.STATUS.idle) {\n    game.start();\n\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n    startMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n  } else {\n    game.restart();\n    score.textContent = game.getScore();\n\n    button.classList.remove('restart');\n    button.classList.add('start');\n    button.textContent = 'Start';\n    startMessage.classList.remove('hidden');\n    loseMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n  }\n\n  document.addEventListener('keydown', handleKey);\n\n  if (game.status !== Game.STATUS.playing) {\n    document.removeEventListener('keydown', handleKey);\n  }\n}\n\nfunction handleKey(e) {\n  e.preventDefault();\n\n  switch (e.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n\n    default:\n      break;\n  }\n\n  score.textContent = game.getScore();\n\n  if (game.getStatus() === Game.STATUS.lose) {\n    loseMessage.classList.remove('hidden');\n  } else if (game.getStatus() === Game.STATUS.win) {\n    winMessage.classList.remove('hidden');\n  }\n\n  game.checkMovesAvailable();\n}\n","'use strict';\n\nclass Game {\n  static STATUS = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.status = Game.STATUS.idle;\n    this.fieldSize = initialState.length;\n    this.initialState = initialState;\n    this.score = 0;\n    this.state = initialState.map((row) => [...row]);\n  }\n\n  getColumns(state) {\n    return state[0].map((_, colIndex) => state.map((row) => row[colIndex]));\n  }\n\n  moveLeft() {\n    if (this.status !== Game.STATUS.playing) {\n      return;\n    }\n\n    const newRows = this.state.map((row) => {\n      let newRow = row.filter((cell) => cell !== 0);\n\n      for (let i = 0; i < newRow.length - 1; i++) {\n        if (newRow[i] === newRow[i + 1]) {\n          newRow[i] *= 2;\n          newRow[i + 1] = 0;\n          this.score += newRow[i];\n        }\n      }\n\n      newRow = newRow.filter((cell) => cell !== 0);\n\n      return [...newRow, ...Array(this.fieldSize - newRow.length).fill(0)];\n    });\n\n    const hasChanged = !this.state.every((row, rowIndex) => {\n      return row.every((cell, cellIndex) => {\n        return cell === newRows[rowIndex][cellIndex];\n      });\n    });\n\n    if (hasChanged) {\n      this.state = newRows;\n      this.addNewCell();\n      this.setField();\n      this.getStatus();\n    }\n  }\n\n  moveRight() {\n    if (this.status !== Game.STATUS.playing) {\n      return;\n    }\n\n    const newRows = this.state.map((row) => {\n      let newRow = row.filter((cell) => cell !== 0);\n\n      for (let i = newRow.length - 1; i > 0; i--) {\n        if (newRow[i] === newRow[i - 1]) {\n          newRow[i] *= 2;\n          newRow[i - 1] = 0;\n          this.score += newRow[i];\n        }\n      }\n\n      newRow = newRow.filter((cell) => cell !== 0);\n\n      return [...Array(this.fieldSize - newRow.length).fill(0), ...newRow];\n    });\n\n    const hasChanged = !this.state.every((row, rowIndex) => {\n      return row.every((cell, cellIndex) => {\n        return cell === newRows[rowIndex][cellIndex];\n      });\n    });\n\n    if (hasChanged) {\n      this.state = newRows;\n      this.addNewCell();\n      this.setField();\n      this.getStatus();\n    }\n  }\n\n  moveUp() {\n    if (this.status !== Game.STATUS.playing) {\n      return;\n    }\n\n    const columns = this.getColumns(this.state);\n\n    const newColumns = columns.map((column) => {\n      let newColumn = column.filter((cell) => cell !== 0);\n\n      for (let i = 0; i < newColumn.length - 1; i++) {\n        if (newColumn[i] === newColumn[i + 1]) {\n          newColumn[i] *= 2;\n          newColumn[i + 1] = 0;\n          this.score += newColumn[i];\n        }\n      }\n\n      newColumn = newColumn.filter((cell) => cell !== 0);\n\n      return [\n        ...newColumn,\n        ...Array(this.fieldSize - newColumn.length).fill(0),\n      ];\n    });\n\n    const newState = newColumns[0].map((_, colIndex) => {\n      return newColumns.map((column) => column[colIndex]);\n    });\n\n    const hasChanged = !this.state.every((row, rowIndex) => {\n      return row.every((cell, cellIndex) => {\n        return cell === newState[rowIndex][cellIndex];\n      });\n    });\n\n    if (hasChanged) {\n      this.state = newState;\n      this.addNewCell();\n      this.setField();\n      this.getStatus();\n    }\n  }\n\n  moveDown() {\n    if (this.status !== Game.STATUS.playing) {\n      return;\n    }\n\n    const columns = this.getColumns(this.state);\n\n    const newColumns = columns.map((column) => {\n      let newColumn = column.filter((cell) => cell !== 0);\n\n      for (let i = newColumn.length - 1; i > 0; i--) {\n        if (newColumn[i] === newColumn[i - 1]) {\n          newColumn[i] *= 2;\n          newColumn[i - 1] = 0;\n          this.score += newColumn[i];\n        }\n      }\n\n      newColumn = newColumn.filter((cell) => cell !== 0);\n\n      return [\n        ...Array(this.fieldSize - newColumn.length).fill(0),\n        ...newColumn,\n      ];\n    });\n\n    const newState = newColumns[0].map((_, colIndex) => {\n      return newColumns.map((column) => column[colIndex]);\n    });\n\n    const hasChanged = !this.state.every((row, rowIndex) => {\n      return row.every((cell, cellIndex) => {\n        return cell === newState[rowIndex][cellIndex];\n      });\n    });\n\n    if (hasChanged) {\n      this.state = newState;\n      this.addNewCell();\n      this.setField();\n      this.getStatus();\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.STATUS.playing;\n    this.state = this.initialState.map((row) => [...row]);\n    this.addNewCell();\n    this.addNewCell();\n\n    this.setField();\n    this.score = 0;\n  }\n\n  restart() {\n    this.status = Game.STATUS.idle;\n    this.state = this.initialState.map((row) => [...row]);\n\n    this.setField();\n    this.score = 0;\n  }\n\n  setField() {\n    const cells = document.querySelectorAll('.field-cell');\n    const flatedState = this.state.flat();\n\n    for (let i = 0; i < cells.length; i++) {\n      cells[i].className = 'field-cell';\n\n      if (flatedState[i]) {\n        cells[i].textContent = flatedState[i];\n        cells[i].classList.add(`field-cell--${flatedState[i]}`);\n      } else {\n        cells[i].textContent = '';\n      }\n    }\n\n    for (const cell of flatedState) {\n      if (cell === 2048) {\n        this.status = Game.STATUS.win;\n      }\n    }\n\n    const hasMove = this.checkMovesAvailable();\n\n    if (!hasMove) {\n      this.status = Game.STATUS.lose;\n    }\n  }\n\n  checkMovesAvailable() {\n    const flatedState = this.state.flat();\n\n    const hasEmptyCells = !flatedState.every((cell) => cell !== 0);\n\n    let canStack;\n\n    for (let row = 0; row < this.fieldSize; row++) {\n      for (let col = 0; col < this.fieldSize; col++) {\n        if (\n          (col < this.fieldSize - 1 &&\n            this.state[row][col] === this.state[row][col + 1]) ||\n          (row < this.fieldSize - 1 &&\n            this.state[row][col] === this.state[row + 1][col])\n        ) {\n          canStack = true;\n        }\n      }\n    }\n\n    if (hasEmptyCells || canStack) {\n      return true;\n    }\n\n    return false;\n  }\n\n  addNewCell() {\n    const emptyCells = [];\n\n    for (let i = 0; i < this.fieldSize; i++) {\n      for (let j = 0; j < this.fieldSize; j++) {\n        if (this.state[i][j] === 0) {\n          emptyCells.push({ row: i, col: j });\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const cellIndex = Math.floor(Math.random() * emptyCells.length);\n\n    const { row, col } = emptyCells[cellIndex];\n\n    const newState = this.state.map((r) => [...r]);\n\n    newState[row][col] = Math.random() > 0.4 ? 2 : 4;\n\n    this.state = newState;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["key","value","$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","instance","Constructor","status","STATUS","idle","fieldSize","score","state","map","row","_","colIndex","_this","playing","newRows","newRow","filter","cell","concat","fill","every","rowIndex","cellIndex","addNewCell","setField","getStatus","newColumns","columns","getColumns","column","newColumn","newState","cells","document","querySelectorAll","flatedState","flat","className","textContent","classList","add","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","win","err","return","checkMovesAvailable","lose","canStack","hasEmptyCells","col","emptyCells","j","push","Math","floor","random","_emptyCells_cellIndex","r","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$button","querySelector","$197cd56b15c33885$var$score","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$handleKey","e","preventDefault","moveUp","moveDown","moveLeft","moveRight","getScore","remove","addEventListener","start","restart","removeEventListener"],"version":3,"file":"index.46cd3d9e.js.map"}